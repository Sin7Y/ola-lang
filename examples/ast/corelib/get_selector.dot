strict digraph "/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/corelib/get_selector.ola" {
	contract [label="contract GetSelector\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/corelib/get_selector.ola:2:1-12:2"]
	var [label="variable num\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/corelib/get_selector.ola:3:5-12"]
	get_selector_test [label="get_selector_test\ncontract: GetSelector\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/corelib/get_selector.ola:6:5-36\nsignature get_selector_test()"]
	returns [label="returns\nu32 "]
	var_decl [label="variable decl u32 selector\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/corelib/get_selector.ola:7:9-52"]
	libfunc [label="libfunc GetSelector\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/corelib/get_selector.ola:7:24-36"]
	number_literal [label="u32 literal: 2653574029\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/corelib/get_selector.ola:7:24-36"]
	alloc_array [label="alloc array string\ninitializer: [115, 101, 116, 86, 97, 114, 115, 40, 117, 51, 50, 41]\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/corelib/get_selector.ola:7:37-51"]
	number_literal_9 [label="u32 literal: 12\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/corelib/get_selector.ola:7:37-51"]
	return [label="return\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/corelib/get_selector.ola:8:9-24"]
	variable [label="variable: selector\nu32\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/corelib/get_selector.ola:8:16-24"]
	diagnostic [label="found GetSelector \nlevel Debug\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/corelib/get_selector.ola:2:1-12:2"]
	contracts -> contract
	contract -> var [label="variable"]
	contract -> get_selector_test [label="fn"]
	get_selector_test -> returns [label="returns"]
	get_selector_test -> var_decl [label="body"]
	var_decl -> libfunc [label="init"]
	libfunc -> number_literal [label="arg #0"]
	libfunc -> alloc_array [label="arg #1"]
	alloc_array -> number_literal_9 [label="length"]
	var_decl -> return [label="next"]
	return -> variable [label="expr"]
	diagnostics -> diagnostic [label="Debug"]
}
