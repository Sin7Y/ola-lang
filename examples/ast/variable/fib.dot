strict digraph "/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola" {
	contract [label="contract Fibonacci\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:1:1-32:2"]
	main [label="main\ncontract: Fibonacci\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:3:5-14\nsignature main()"]
	expr [label="expression\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:4:8-29"]
	call_internal_function [label="call internal function\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:4:8-29"]
	internal_function [label="fn(u32)  returns (void)\nFibonacci.fib_non_recursive\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:4:8-29"]
	number_literal [label="u32 literal: 10\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:4:26-28"]
	fib_recursive [label="fib_recursive\ncontract: Fibonacci\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:7:5-37\nsignature fib_recursive(u32)"]
	parameters [label="parameters\nu32 n"]
	returns [label="returns\nu32 "]
	if [label="if\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:8:9-10:10"]
	equal [label="equal\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:8:13-19"]
	variable [label="variable: n\nu32\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:8:13-14"]
	number_literal_13 [label="u32 literal: 0\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:8:18-19"]
	return [label="return\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:9:13-21"]
	number_literal_15 [label="u32 literal: 0\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:9:20-21"]
	if_16 [label="if\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:11:9-13:10"]
	equal_17 [label="equal\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:11:13-19"]
	variable_18 [label="variable: n\nu32\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:11:13-14"]
	number_literal_19 [label="u32 literal: 1\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:11:18-19"]
	return_20 [label="return\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:12:13-21"]
	number_literal_21 [label="u32 literal: 1\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:12:20-21"]
	return_22 [label="return\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:14:9-57"]
	add [label="add\nu32\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:14:16-57"]
	call_internal_function_24 [label="call internal function\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:14:16-35"]
	internal_function_25 [label="fn(u32)  returns (u32)\nFibonacci.fib_recursive\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:14:16-35"]
	subtract [label="subtract\nu32\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:14:30-34"]
	variable_27 [label="variable: n\nu32\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:14:30-31"]
	number_literal_28 [label="u32 literal: 1\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:14:33-34"]
	call_internal_function_29 [label="call internal function\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:14:38-57"]
	internal_function_30 [label="fn(u32)  returns (u32)\nFibonacci.fib_recursive\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:14:38-57"]
	subtract_31 [label="subtract\nu32\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:14:52-56"]
	variable_32 [label="variable: n\nu32\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:14:52-53"]
	number_literal_33 [label="u32 literal: 2\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:14:55-56"]
	fib_non_recursive [label="fib_non_recursive\ncontract: Fibonacci\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:17:5-41\nsignature fib_non_recursive(u32)"]
	parameters_35 [label="parameters\nu32 n"]
	returns_36 [label="returns\nu32 "]
	if_37 [label="if\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:18:9-20:10"]
	equal_38 [label="equal\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:18:13-19"]
	variable_39 [label="variable: n\nu32\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:18:13-14"]
	number_literal_40 [label="u32 literal: 0\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:18:18-19"]
	return_41 [label="return\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:19:13-21"]
	number_literal_42 [label="u32 literal: 0\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:19:20-21"]
	var_decl [label="variable decl u32 first\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:21:9-22"]
	number_literal_44 [label="u32 literal: 0\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:21:21-22"]
	var_decl_45 [label="variable decl u32 second\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:22:9-23"]
	number_literal_46 [label="u32 literal: 1\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:22:22-23"]
	var_decl_47 [label="variable decl u32 third\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:23:9-22"]
	number_literal_48 [label="u32 literal: 1\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:23:21-22"]
	for [label="for\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:24:9-28:10"]
	var_decl_50 [label="variable decl u32 i\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:24:14-23"]
	number_literal_51 [label="u32 literal: 2\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:24:22-23"]
	less_equal [label="less equal\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:24:25-31"]
	variable_53 [label="variable: i\nu32\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:24:25-26"]
	variable_54 [label="variable: n\nu32\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:24:30-31"]
	expr_55 [label="expression\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:24:33-36"]
	pre_increment [label="pre increment\nu32\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:24:33-36"]
	variable_57 [label="variable: i\nu32\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:24:33-34"]
	expr_58 [label="expression\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:25:14-36"]
	assign [label="assign\nu32\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:25:14-36"]
	variable_60 [label="variable: third\nu32\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:25:14-19"]
	add_61 [label="add\nu32\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:25:22-36"]
	variable_62 [label="variable: first\nu32\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:25:22-27"]
	variable_63 [label="variable: second\nu32\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:25:30-36"]
	expr_64 [label="expression\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:26:14-28"]
	assign_65 [label="assign\nu32\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:26:14-28"]
	variable_66 [label="variable: first\nu32\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:26:14-19"]
	variable_67 [label="variable: second\nu32\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:26:22-28"]
	expr_68 [label="expression\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:27:14-28"]
	assign_69 [label="assign\nu32\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:27:14-28"]
	variable_70 [label="variable: second\nu32\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:27:14-20"]
	variable_71 [label="variable: third\nu32\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:27:23-28"]
	return_72 [label="return\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:29:9-21"]
	variable_73 [label="variable: third\nu32\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:29:16-21"]
	diagnostic [label="found Fibonacci \nlevel Debug\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/variable/fib.ola:1:1-32:2"]
	contracts -> contract
	contract -> main [label="fn"]
	main -> expr [label="body"]
	expr -> call_internal_function [label="expr"]
	call_internal_function -> internal_function [label="function"]
	call_internal_function -> number_literal [label="arg #0"]
	contract -> fib_recursive [label="fn"]
	fib_recursive -> parameters [label="parameters"]
	fib_recursive -> returns [label="returns"]
	fib_recursive -> if [label="body"]
	if -> equal [label="cond"]
	equal -> variable [label="left"]
	equal -> number_literal_13 [label="right"]
	if -> return [label="then"]
	return -> number_literal_15 [label="expr"]
	if -> if_16 [label="next"]
	if_16 -> equal_17 [label="cond"]
	equal_17 -> variable_18 [label="left"]
	equal_17 -> number_literal_19 [label="right"]
	if_16 -> return_20 [label="then"]
	return_20 -> number_literal_21 [label="expr"]
	if_16 -> return_22 [label="next"]
	return_22 -> add [label="expr"]
	add -> call_internal_function_24 [label="left"]
	call_internal_function_24 -> internal_function_25 [label="function"]
	call_internal_function_24 -> subtract [label="arg #0"]
	subtract -> variable_27 [label="left"]
	subtract -> number_literal_28 [label="right"]
	add -> call_internal_function_29 [label="right"]
	call_internal_function_29 -> internal_function_30 [label="function"]
	call_internal_function_29 -> subtract_31 [label="arg #0"]
	subtract_31 -> variable_32 [label="left"]
	subtract_31 -> number_literal_33 [label="right"]
	contract -> fib_non_recursive [label="fn"]
	fib_non_recursive -> parameters_35 [label="parameters"]
	fib_non_recursive -> returns_36 [label="returns"]
	fib_non_recursive -> if_37 [label="body"]
	if_37 -> equal_38 [label="cond"]
	equal_38 -> variable_39 [label="left"]
	equal_38 -> number_literal_40 [label="right"]
	if_37 -> return_41 [label="then"]
	return_41 -> number_literal_42 [label="expr"]
	if_37 -> var_decl [label="next"]
	var_decl -> number_literal_44 [label="init"]
	var_decl -> var_decl_45 [label="next"]
	var_decl_45 -> number_literal_46 [label="init"]
	var_decl_45 -> var_decl_47 [label="next"]
	var_decl_47 -> number_literal_48 [label="init"]
	var_decl_47 -> for [label="next"]
	for -> var_decl_50 [label="init"]
	var_decl_50 -> number_literal_51 [label="init"]
	for -> less_equal [label="cond"]
	less_equal -> variable_53 [label="left"]
	less_equal -> variable_54 [label="right"]
	for -> expr_55 [label="next"]
	expr_55 -> pre_increment [label="expr"]
	pre_increment -> variable_57 [label="expr"]
	for -> expr_58 [label="body"]
	expr_58 -> assign [label="expr"]
	assign -> variable_60 [label="left"]
	assign -> add_61 [label="right"]
	add_61 -> variable_62 [label="left"]
	add_61 -> variable_63 [label="right"]
	expr_58 -> expr_64 [label="next"]
	expr_64 -> assign_65 [label="expr"]
	assign_65 -> variable_66 [label="left"]
	assign_65 -> variable_67 [label="right"]
	expr_64 -> expr_68 [label="next"]
	expr_68 -> assign_69 [label="expr"]
	assign_69 -> variable_70 [label="left"]
	assign_69 -> variable_71 [label="right"]
	for -> return_72 [label="next"]
	return_72 -> variable_73 [label="expr"]
	diagnostics -> diagnostic [label="Debug"]
}
