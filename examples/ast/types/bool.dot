strict digraph "/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/types/bool.ola" {
	contract [label="contract BoolContract\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/types/bool.ola:1:1-16:2"]
	bool_compare [label="bool_compare\ncontract: BoolContract\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/types/bool.ola:4:5-38\nsignature bool_compare(bool)"]
	parameters [label="parameters\nbool a"]
	returns [label="returns\nbool "]
	var_decl [label="variable decl bool b\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/types/bool.ola:5:9-22"]
	bool_literal [label="bool literal: true\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/types/bool.ola:5:18-22"]
	var_decl_7 [label="variable decl bool c\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/types/bool.ola:6:9-23"]
	bool_literal_8 [label="bool literal: false\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/types/bool.ola:6:18-23"]
	var_decl_9 [label="variable decl bool d\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/types/bool.ola:7:9-22"]
	bool_literal_10 [label="bool literal: true\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/types/bool.ola:7:18-22"]
	expr [label="expression\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/types/bool.ola:8:9-18"]
	libfunc [label="libfunc Assert\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/types/bool.ola:8:9-15"]
	variable [label="variable: a\nbool\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/types/bool.ola:8:16-17"]
	expr_14 [label="expression\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/types/bool.ola:9:9-18"]
	libfunc_15 [label="libfunc Assert\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/types/bool.ola:9:9-15"]
	variable_16 [label="variable: b\nbool\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/types/bool.ola:9:16-17"]
	expr_17 [label="expression\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/types/bool.ola:10:9-19"]
	libfunc_18 [label="libfunc Assert\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/types/bool.ola:10:9-15"]
	not [label="not\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/types/bool.ola:10:16-18"]
	variable_20 [label="variable: c\nbool\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/types/bool.ola:10:17-18"]
	expr_21 [label="expression\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/types/bool.ola:11:9-23"]
	libfunc_22 [label="libfunc Assert\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/types/bool.ola:11:9-15"]
	not_qual [label="not equal\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/types/bool.ola:11:16-22"]
	variable_24 [label="variable: b\nbool\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/types/bool.ola:11:16-17"]
	variable_25 [label="variable: c\nbool\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/types/bool.ola:11:21-22"]
	expr_26 [label="expression\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/types/bool.ola:12:9-23"]
	libfunc_27 [label="libfunc Assert\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/types/bool.ola:12:9-15"]
	equal [label="equal\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/types/bool.ola:12:16-22"]
	variable_29 [label="variable: a\nbool\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/types/bool.ola:12:16-17"]
	variable_30 [label="variable: b\nbool\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/types/bool.ola:12:21-22"]
	return [label="return\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/types/bool.ola:13:9-17"]
	variable_32 [label="variable: d\nbool\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/types/bool.ola:13:16-17"]
	diagnostic [label="found BoolContract \nlevel Debug\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/types/bool.ola:1:1-16:2"]
	contracts -> contract
	contract -> bool_compare [label="fn"]
	bool_compare -> parameters [label="parameters"]
	bool_compare -> returns [label="returns"]
	bool_compare -> var_decl [label="body"]
	var_decl -> bool_literal [label="init"]
	var_decl -> var_decl_7 [label="next"]
	var_decl_7 -> bool_literal_8 [label="init"]
	var_decl_7 -> var_decl_9 [label="next"]
	var_decl_9 -> bool_literal_10 [label="init"]
	var_decl_9 -> expr [label="next"]
	expr -> libfunc [label="expr"]
	libfunc -> variable [label="arg #0"]
	expr -> expr_14 [label="next"]
	expr_14 -> libfunc_15 [label="expr"]
	libfunc_15 -> variable_16 [label="arg #0"]
	expr_14 -> expr_17 [label="next"]
	expr_17 -> libfunc_18 [label="expr"]
	libfunc_18 -> not [label="arg #0"]
	not -> variable_20 [label="expr"]
	expr_17 -> expr_21 [label="next"]
	expr_21 -> libfunc_22 [label="expr"]
	libfunc_22 -> not_qual [label="arg #0"]
	not_qual -> variable_24 [label="left"]
	not_qual -> variable_25 [label="right"]
	expr_21 -> expr_26 [label="next"]
	expr_26 -> libfunc_27 [label="expr"]
	libfunc_27 -> equal [label="arg #0"]
	equal -> variable_29 [label="left"]
	equal -> variable_30 [label="right"]
	expr_26 -> return [label="next"]
	return -> variable_32 [label="expr"]
	diagnostics -> diagnostic [label="Debug"]
}
