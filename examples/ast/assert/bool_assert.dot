strict digraph "/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/bool_assert.ola" {
	contract [label="contract AssertContract\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/bool_assert.ola:1:1-18:2"]
	test [label="test\ncontract: AssertContract\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/bool_assert.ola:3:5-14\nsignature test()"]
	var_decl [label="variable decl u32 a\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/bool_assert.ola:5:8-17"]
	number_literal [label="u32 literal: 1\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/bool_assert.ola:5:16-17"]
	var_decl_5 [label="variable decl u32 b\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/bool_assert.ola:6:8-17"]
	number_literal_6 [label="u32 literal: 2\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/bool_assert.ola:6:16-17"]
	var_decl_7 [label="variable decl u32 c\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/bool_assert.ola:7:8-17"]
	number_literal_8 [label="u32 literal: 1\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/bool_assert.ola:7:16-17"]
	var_decl_9 [label="variable decl bool d\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/bool_assert.ola:8:8-21"]
	bool_literal [label="bool literal: true\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/bool_assert.ola:8:17-21"]
	var_decl_11 [label="variable decl bool e\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/bool_assert.ola:9:8-22"]
	bool_literal_12 [label="bool literal: false\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/bool_assert.ola:9:17-22"]
	expr [label="expression\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/bool_assert.ola:10:8-22"]
	libfunc [label="libfunc Assert\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/bool_assert.ola:10:8-14"]
	equal [label="equal\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/bool_assert.ola:10:15-21"]
	variable [label="variable: a\nu32\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/bool_assert.ola:10:15-16"]
	variable_17 [label="variable: c\nu32\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/bool_assert.ola:10:20-21"]
	expr_18 [label="expression\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/bool_assert.ola:11:8-22"]
	libfunc_19 [label="libfunc Assert\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/bool_assert.ola:11:8-14"]
	less_equal [label="less equal\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/bool_assert.ola:11:15-21"]
	variable_21 [label="variable: a\nu32\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/bool_assert.ola:11:15-16"]
	variable_22 [label="variable: c\nu32\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/bool_assert.ola:11:20-21"]
	expr_23 [label="expression\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/bool_assert.ola:12:8-23"]
	libfunc_24 [label="libfunc Assert\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/bool_assert.ola:12:8-14"]
	not_qual [label="not equal\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/bool_assert.ola:12:16-22"]
	variable_26 [label="variable: a\nu32\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/bool_assert.ola:12:16-17"]
	variable_27 [label="variable: b\nu32\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/bool_assert.ola:12:21-22"]
	expr_28 [label="expression\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/bool_assert.ola:13:8-23"]
	libfunc_29 [label="libfunc Assert\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/bool_assert.ola:13:8-14"]
	more_equal [label="more equal\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/bool_assert.ola:13:16-22"]
	variable_31 [label="variable: b\nu32\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/bool_assert.ola:13:16-17"]
	variable_32 [label="variable: a\nu32\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/bool_assert.ola:13:21-22"]
	expr_33 [label="expression\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/bool_assert.ola:14:8-17"]
	libfunc_34 [label="libfunc Assert\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/bool_assert.ola:14:8-14"]
	variable_35 [label="variable: d\nbool\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/bool_assert.ola:14:15-16"]
	expr_36 [label="expression\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/bool_assert.ola:15:8-18"]
	libfunc_37 [label="libfunc Assert\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/bool_assert.ola:15:8-14"]
	not [label="not\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/bool_assert.ola:15:15-17"]
	variable_39 [label="variable: e\nbool\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/bool_assert.ola:15:16-17"]
	diagnostic [label="found AssertContract \nlevel Debug\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/bool_assert.ola:1:1-18:2"]
	contracts -> contract
	contract -> test [label="fn"]
	test -> var_decl [label="body"]
	var_decl -> number_literal [label="init"]
	var_decl -> var_decl_5 [label="next"]
	var_decl_5 -> number_literal_6 [label="init"]
	var_decl_5 -> var_decl_7 [label="next"]
	var_decl_7 -> number_literal_8 [label="init"]
	var_decl_7 -> var_decl_9 [label="next"]
	var_decl_9 -> bool_literal [label="init"]
	var_decl_9 -> var_decl_11 [label="next"]
	var_decl_11 -> bool_literal_12 [label="init"]
	var_decl_11 -> expr [label="next"]
	expr -> libfunc [label="expr"]
	libfunc -> equal [label="arg #0"]
	equal -> variable [label="left"]
	equal -> variable_17 [label="right"]
	expr -> expr_18 [label="next"]
	expr_18 -> libfunc_19 [label="expr"]
	libfunc_19 -> less_equal [label="arg #0"]
	less_equal -> variable_21 [label="left"]
	less_equal -> variable_22 [label="right"]
	expr_18 -> expr_23 [label="next"]
	expr_23 -> libfunc_24 [label="expr"]
	libfunc_24 -> not_qual [label="arg #0"]
	not_qual -> variable_26 [label="left"]
	not_qual -> variable_27 [label="right"]
	expr_23 -> expr_28 [label="next"]
	expr_28 -> libfunc_29 [label="expr"]
	libfunc_29 -> more_equal [label="arg #0"]
	more_equal -> variable_31 [label="left"]
	more_equal -> variable_32 [label="right"]
	expr_28 -> expr_33 [label="next"]
	expr_33 -> libfunc_34 [label="expr"]
	libfunc_34 -> variable_35 [label="arg #0"]
	expr_33 -> expr_36 [label="next"]
	expr_36 -> libfunc_37 [label="expr"]
	libfunc_37 -> not [label="arg #0"]
	not -> variable_39 [label="expr"]
	diagnostics -> diagnostic [label="Debug"]
}
