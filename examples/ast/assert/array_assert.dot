strict digraph "/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/array_assert.ola" {
	contract [label="contract DynamicArrayExample\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/array_assert.ola:1:1-10:2"]
	test [label="test\ncontract: DynamicArrayExample\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/array_assert.ola:3:5-14\nsignature test()"]
	var_decl [label="variable decl u32[] array\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/array_assert.ola:4:8-34"]
	alloc_array [label="alloc array u32[]\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/array_assert.ola:4:22-34"]
	number_literal [label="u32 literal: 3\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/array_assert.ola:4:32-33"]
	expr [label="expression\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/array_assert.ola:5:8-33"]
	libfunc [label="libfunc Assert\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/array_assert.ola:5:8-14"]
	equal [label="equal\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/array_assert.ola:5:15-32"]
	libfunc_9 [label="libfunc ArrayLength\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/array_assert.ola:5:15-27"]
	variable [label="variable: array\nu32[]\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/array_assert.ola:5:15-20"]
	number_literal_11 [label="u32 literal: 3\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/array_assert.ola:5:31-32"]
	expr_12 [label="expression\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/array_assert.ola:6:8-20"]
	assign [label="assign\nu32\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/array_assert.ola:6:8-20"]
	subscript [label="subscript u32[]\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/array_assert.ola:6:8-16"]
	variable_15 [label="variable: array\nu32[]\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/array_assert.ola:6:8-13"]
	number_literal_16 [label="u32 literal: 0\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/array_assert.ola:6:14-15"]
	number_literal_17 [label="u32 literal: 1\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/array_assert.ola:6:19-20"]
	expr_18 [label="expression\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/array_assert.ola:7:8-29"]
	libfunc_19 [label="libfunc Assert\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/array_assert.ola:7:8-14"]
	equal_20 [label="equal\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/array_assert.ola:7:15-28"]
	load [label="load u32\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/array_assert.ola:7:15-23"]
	subscript_22 [label="subscript u32[]\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/array_assert.ola:7:15-23"]
	variable_23 [label="variable: array\nu32[]\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/array_assert.ola:7:15-20"]
	number_literal_24 [label="u32 literal: 0\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/array_assert.ola:7:21-22"]
	number_literal_25 [label="u32 literal: 1\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/array_assert.ola:7:27-28"]
	diagnostic [label="found DynamicArrayExample \nlevel Debug\n/Users/yangpan/workspace/rust-workspace/ola-lang/examples/source/assert/array_assert.ola:1:1-10:2"]
	contracts -> contract
	contract -> test [label="fn"]
	test -> var_decl [label="body"]
	var_decl -> alloc_array [label="init"]
	alloc_array -> number_literal [label="length"]
	var_decl -> expr [label="next"]
	expr -> libfunc [label="expr"]
	libfunc -> equal [label="arg #0"]
	equal -> libfunc_9 [label="left"]
	libfunc_9 -> variable [label="arg #0"]
	equal -> number_literal_11 [label="right"]
	expr -> expr_12 [label="next"]
	expr_12 -> assign [label="expr"]
	assign -> subscript [label="left"]
	subscript -> variable_15 [label="array"]
	subscript -> number_literal_16 [label="index"]
	assign -> number_literal_17 [label="right"]
	expr_12 -> expr_18 [label="next"]
	expr_18 -> libfunc_19 [label="expr"]
	libfunc_19 -> equal_20 [label="arg #0"]
	equal_20 -> load [label="left"]
	load -> subscript_22 [label="expr"]
	subscript_22 -> variable_23 [label="array"]
	subscript_22 -> number_literal_24 [label="index"]
	equal_20 -> number_literal_25 [label="right"]
	diagnostics -> diagnostic [label="Debug"]
}
