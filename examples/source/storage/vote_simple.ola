contract Voting {
 
    struct Proposal {
        u32 name;  
        u32 voteCount;
    }


    struct Voter {
        bool voted;  
        u32 vote;   
    }

    mapping(address => Voter) voters;

    Proposal[] proposals;

    // constructor
    // [3, 64, 65, 66] 
    fn contract_init(u32[] proposalNames_) {
        print(proposalNames_);
        for (u32 i = 0; i < proposalNames_.length; i++) {
           Proposal pp = Proposal({
                name: proposalNames_[i],
                voteCount: 99
            });
            proposals.push(pp);
        }
        print(proposals[0].name);
        print(proposals[1].name);
        print(proposals[2].name);
        // print(proposals[1].name);
        // print(proposals[2].name);
        // assert(proposals[0].name == 64, "Proposal name is not 64");
        // assert(proposals[1].name == 65, "Proposal name is not 65");
        // assert(proposals[2].name == 66, "Proposal name is not 66");
    }




}