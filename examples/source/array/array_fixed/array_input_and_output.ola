contract ArrayInputExample {
    
    fn array_input_u32(u32[2][3] array, u32 b) -> (u32[2]) {
        u32[2] a = array[b];
        return a;
    }


    fn array_output_u32() -> (u32[2][3]) {
        u32[2][3] array;
        return array;
    }
    

    fn array_input_address(address[2][3] array, u32 b) -> (address[2]) {
        address[2] a = array[b];
        return a;
    }

    fn array_input_address_1(address[2][3] array, u32 b) -> (address) {
        address a = array[b][1];
        return a;
    }

    fn array_input_address_2(address[2][3] array) -> (address[2][3]) {
        fields encode_value = abi.encode(array);
        address[2][3] a = abi.decode(encode_value, (address[2][3]));
        return a;
    }


    fn array_output_address() -> (address[2][3]) {
        address[2][3] array;
        return array;
    }
}