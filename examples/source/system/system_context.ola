contract SystemContextExample {

    fn all_test() {
        u32 block_number_value = block_number_test();
        print(block_number_value);
        u32 block_timestamp_value = block_timestamp_test();
        print(block_timestamp_value);
        address sequence = sequence_address_test();
        print(sequence);
        u32 tx_version_value = transaction_version_test();
        print(tx_version_value);
        u32 chain_id_value = chain_id_test();
        print(chain_id_value);
        u32 nonce_value = nonce_test();
        print(nonce_value);
        fields signature_value = signautre_test();
        print(signature_value);
        hash tx_hash = transaction_hash_test();
        print(tx_hash);
        address caller = caller_address_test();
        print(caller);
        address origin = origin_address_test();
        print(origin);
        address code = code_address_test();
        print(code);
        address current = current_address_test();
        print(current);
    }
    
    fn caller_address_test() -> (address) {
        return caller_address() ;
    }

    fn origin_address_test() -> (address) {
       return origin_address();
    }

    fn code_address_test() -> (address) {
        return code_address();
    }

    fn current_address_test() -> (address) {
        return current_address();
    }

    fn chain_id_test() -> (u32) {
        return chain_id();
    }

    fn block_number_test() -> (u32) {
        return block_number();
    }

    fn block_timestamp_test() -> (u32) {
        return block_timestamp();
    }

    fn sequence_address_test() -> (address) {
        return sequence_address();
    }

    fn nonce_test() -> (u32) {
        return nonce();
    }

    fn signautre_test() -> (fields) {
        return signature();
    }

    fn transaction_version_test() -> (u32) {
        return tx_version();
    }

    fn transaction_hash_test() -> (hash) {
        return tx_hash();
    }

}



